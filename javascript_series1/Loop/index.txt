# Loops are used to perform repeated actions based on a condition.

# In JavaScript there many types of loops:

The “while” loop
The “do…while” loop
The “for” loop
The for…of loop
The for…in loop
Loops ( while )

# The while loop has the following syntax
While the condition is truthy, the code in the while loop body is executed.
A single execution of the loop body is called an iteration. The loop in the example above makes three iterations.
If i++ was missing from the example above, the loop would repeat (in theory) forever. In practice, the browser provides ways to stop such loops, and in server-side JavaScript, we can kill the process.
Any expression or variable can be a loop condition, not just comparisons: the condition is evaluated and converted to a boolean.

# Loops ( do…while )

The do…while loop has the following syntax
This is similar to while loop. The condition check is just moved below the loop body using the do..while syntax:
This means the code is run at least once before the loop start.

# Loops ( for )

The for loop has the following syntax
The for loop is more complex, but it’s also the most commonly used loop.
If you are new to loops, it could help to go back to the example and reproduce how it runs step-by-step on a piece of paper.
The “counter” variable i is declared right in the loop. This is called an “inline” variable declaration. Such variables are visible only inside the loop.
we can force the exit at any time using the special break directive.
The continue directive is a “lighter version” of break. It doesn’t stop the whole loop. Instead, it stops the current iteration and forces the loop to start a new one (if the condition allows).


# Loops ( for…of )

The for…of loop is used to loop over iterable properties of an object. It has the following syntax
The values of an iterable object can be iterated over, meaning they can counted. E.g Arrays, Maps, Set, Strings  (We will talk deeply about these in Data Structure section)
On each iteration a value of a different property is assigned to variable. variable may be declared with const, let.

Loops ( for…in )

The for…in has the following syntax
The for…in statement iterates over all enumerable properties of an object that are keyed by strings (ignoring ones keyed by Symbols), including inherited enumerable properties.
Given that for…in is built for iterating object properties, not recommended for use with arrays, and options like Array.prototype.forEach() and for…of exist, what might be the use of for…in at all?
It may be most practically used for debugging purposes, being an easy way to check the properties of an object